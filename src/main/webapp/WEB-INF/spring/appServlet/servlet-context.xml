<?xml version="1.0" encoding="UTF-8"?>
<beans:beans xmlns="http://www.springframework.org/schema/mvc"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:beans="http://www.springframework.org/schema/beans"
    xmlns:context="http://www.springframework.org/schema/context" xmlns:tx="http://www.springframework.org/schema/tx"
    xmlns:task="http://www.springframework.org/schema/task"
    xsi:schemaLocation="http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc.xsd
        http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
        http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd
        http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-4.0.xsd
        http://www.springframework.org/schema/task http://www.springframework.org/schema/task/spring-task-3.0.xsd">

    <!-- DispatcherServlet Context: defines this servlet's request-processing
        infrastructure -->

    <!-- Enables the Spring MVC @Controller programming model -->
    <annotation-driven />

    <!-- Handles HTTP GET requests for /resources/** by efficiently serving
        up static resources in the ${webappRoot}/resources directory -->
    <resources mapping="/resources/**" location="/resources/" />

    <!-- Resolves views selected for rendering by @Controllers to .jsp resources
        in the /WEB-INF/views directory -->
    <beans:bean
        class="org.springframework.web.servlet.view.InternalResourceViewResolver">
        <beans:property name="prefix" value="/WEB-INF/views/" />
        <beans:property name="suffix" value=".jsp" />
    </beans:bean>

    <context:property-placeholder location="classpath:main.properties"/>

    <beans:bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource"
        destroy-method="close">
        <beans:property name="driverClassName" value="${db.driverClassName}" />
        <beans:property name="url" value="${db.connectionString}" />
        <beans:property name="username" value="${db.username}" />
        <beans:property name="password" value="${db.password}" />
        <beans:property name="initialSize" value="${db.initialSize}" />
        <beans:property name="maxActive" value="${db.maxActive}" />
        <beans:property name="maxIdle" value="${db.maxIdle}" />
        <beans:property name="minIdle" value="${db.minIdle}" />
        <beans:property name="maxWait" value="${db.maxWait}" />
        <beans:property name="minEvictableIdleTimeMillis" value="${db.minEvictableIdleTimeMillis}" />
        <beans:property name="timeBetweenEvictionRunsMillis" value="${db.timeBetweenEvictionRunsMillis}" />
        <beans:property name="validationQuery" value="${db.validationQuery}" />
        <beans:property name="testOnBorrow" value="true" />
        <beans:property name="removeAbandoned" value="true" />
        <beans:property name="removeAbandonedTimeout" value="60" />
        <beans:property name="logAbandoned" value="true" />
    </beans:bean>

    <!-- Hibernate 5 SessionFactory Bean definition -->
    <beans:bean id="hibernate5AnnotatedSessionFactory"
        class="org.springframework.orm.hibernate5.LocalSessionFactoryBean">
        <beans:property name="dataSource" ref="dataSource" />
        <beans:property name="annotatedClasses">
            <beans:list>
                <beans:value>com.abixe.hangouttips.model.Ipv4Location</beans:value>
                <beans:value>com.abixe.hangouttips.model.Ipv6Location</beans:value>
                <beans:value>com.abixe.hangouttips.model.Place</beans:value>
                <beans:value>com.abixe.hangouttips.model.Location</beans:value>
            </beans:list>
        </beans:property>
        <beans:property name="hibernateProperties">
            <beans:props>
                <beans:prop key="hibernate.dialect">${hibernate.dialect}</beans:prop>
                <beans:prop key="hibernate.batch_size">${hibernate.batchSize}</beans:prop>
                <beans:prop key="hibernate.show_sql">${hibernate.showSql}</beans:prop>
            </beans:props>
        </beans:property>
    </beans:bean>

    <beans:bean id="ipv4LocationDAO" class="com.abixe.hangouttips.dao.Ipv4LocationDAOImpl">
        <beans:property name="sessionFactory" ref="hibernate5AnnotatedSessionFactory" />
    </beans:bean>
    <beans:bean id="ipv6LocationDAO" class="com.abixe.hangouttips.dao.Ipv6LocationDAOImpl">
        <beans:property name="sessionFactory" ref="hibernate5AnnotatedSessionFactory" />
    </beans:bean>
    <beans:bean id="ipLocationService" class="com.abixe.hangouttips.service.IpLocationServiceImpl">
        <beans:property name="ipv4LocationDAO" ref="ipv4LocationDAO"></beans:property>
        <beans:property name="ipv6LocationDAO" ref="ipv6LocationDAO"></beans:property>
    </beans:bean>

    <beans:bean id="locationDAO" class="com.abixe.hangouttips.dao.LocationDAOImpl">
        <beans:property name="sessionFactory" ref="hibernate5AnnotatedSessionFactory" />
    </beans:bean>
    <beans:bean id="locationService" class="com.abixe.hangouttips.service.LocationServiceImpl">
        <beans:property name="locationDAO" ref="locationDAO"></beans:property>
    </beans:bean>

    <beans:bean id="placeDAO" class="com.abixe.hangouttips.dao.PlaceDAOImpl">
        <beans:property name="sessionFactory" ref="hibernate5AnnotatedSessionFactory" />
    </beans:bean>

    <beans:bean id="placeApiService" class="com.abixe.hangouttips.service.PlaceApiServiceImpl">
        <beans:property name="locationDAO" ref="locationDAO"></beans:property>
        <beans:property name="placeDAO" ref="placeDAO"></beans:property>
    </beans:bean>

    <context:component-scan base-package="com.abixe.hangouttips" />

    <tx:annotation-driven transaction-manager="transactionManager"/>

    <beans:bean id="transactionManager" class="org.springframework.orm.hibernate5.HibernateTransactionManager">
        <beans:property name="sessionFactory" ref="hibernate5AnnotatedSessionFactory" />
    </beans:bean>

    <task:executor id="myexecutor" pool-size="5"  />
    <task:annotation-driven executor="myexecutor"/>

</beans:beans>